name: CI

on:
  push:
    branches:
      - master

jobs:
  prepare:
    runs-on: ubuntu-latest
    container:
      image: node:16
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
      tag_exists: ${{ steps.check_tag.outputs.EXISTS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install fs

      - name: Get version
        run: echo "VERSION=$(node -p "require('./manifest.json').version")" >> $GITHUB_ENV

      - name: Check version
        id: check_version
        run: |
          if [ -z "${VERSION}" ]; then
            echo "VERSION is not set, failing the build."
            exit 1
          else
            echo "VERSION is set to ${VERSION}"
          fi
        shell: bash

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${VERSION}" >/dev/null 2>&1; then
            echo "Tag v${VERSION} exists."
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "Tag v${VERSION} does not exist."
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

  release:
    needs: prepare
    if: needs.prepare.outputs.tag_exists == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create tag
        run: git tag "v${{ needs.prepare.outputs.version }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.prepare.outputs.version }}
          release_name: v${{ needs.prepare.outputs.version }}
          draft: false
          prerelease: false

  build:
    needs: release
    runs-on: ubuntu-latest
    container:
      image: node:16

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Package extension
        run: web-ext build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: extension
          path: web-ext-artifacts/*.zip

#  publish:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Publish to Firefox Add-ons
#        uses: RobbieGM/addon-action@v1
#        with:
#          zip: web-ext-artifacts/*.zip
#          id: ${{ secrets.ADD_ON_ID }}
#          version: ${{ needs.prepare.outputs.version }}
#          jwt_issuer: ${{ secrets.FIREFOX_API_KEY }}
#          jwt_secret: ${{ secrets.FIREFOX_API_SECRET }}
