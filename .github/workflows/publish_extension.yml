name: CI

on:
  push:
    branches:
      - master

jobs:
  prepare:
    runs-on: ubuntu-latest
    container:
      image: node:16

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install fs

      - name: Get version
        run: echo "VERSION=$(node -p "require('./manifest.json').version")" >> $GITHUB_ENV

      - name: Check version
        id: check_version
        run: |
          if [ -z "${VERSION}" ]; then
            echo "VERSION is not set, failing the build."
            exit 1
          else
            echo "VERSION is set to ${VERSION}"
          fi
        shell: bash

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "${VERSION}" >/dev/null 2>&1; then
            echo "Tag ${VERSION} exists."
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "Tag ${VERSION} does not exist."
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

    outputs:
      version: ${{ env.VERSION }}
      tag_exists: ${{ env.EXISTS }}

  artifacts:
    needs: prepare
    if: needs.prepare.outputs.tag_exists == 'false'
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install web-ext
        run: npm install --global web-ext

      - name: Package extension
        run: web-ext build

      - name: Uploading artifact
        id: upload_artifact
        uses: actions/upload-artifact@v3
        with:
          name: "tab_saver-${{ needs.prepare.outputs.version }}"
          path: "web-ext-artifacts/tab_saver-${{ needs.prepare.outputs.version }}.zip"
          if-no-files-found: error

  release-github:
    needs: [artifacts, prepare]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

      - name: Create Tag
        run: |
          git tag ${{ needs.prepare.outputs.version }}
          git push origin ${{ needs.prepare.outputs.version }}

      - name: Downloading artifact
        uses: actions/download-artifact@v3
        with:
          name: "tab_saver-${{ needs.prepare.outputs.version }}"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.prepare.outputs.version }}
          name: ${{ needs.prepare.outputs.version }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: "tab_saver-${{ needs.prepare.outputs.version }}.zip"


  release-firefox:
    needs: [artifacts, prepare]
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Downloading artifact
        uses: actions/download-artifact@v3
        with:
          name: "tab_saver-${{ needs.prepare.outputs.version }}"

      - name: Deploy to Firefox Addons
        id: addonsDeploy
        uses: cardinalby/webext-buildtools-firefox-addons-action@v1
        continue-on-error: true
        with:
          zipFilePath: tab_saver-${{ needs.prepare.outputs.version }}.zip
          extensionId: ${{ secrets.FF_EXTENSION_ID }}
          jwtIssuer: ${{ secrets.FIREFOX_API_KEY }}
          jwtSecret: ${{ secrets.FIREFOX_API_SECRET }}

      - name: Abort on upload error
        if: |
          steps.addonsDeploy.outcome == 'failure' &&
          steps.addonsDeploy.outputs.sameVersionAlreadyUploadedError != 'true'
        run: exit 1